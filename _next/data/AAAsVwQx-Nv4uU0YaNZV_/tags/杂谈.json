{"pageProps":{"allTagInfos":[{"tag":"杂技","slug":"杂技","path":"/tags/杂技","postSlugs":[{"postType":"article","postSlug":"Building-this-blog","postPagePath":"/articles/Building-this-blog"},{"postType":"article","postSlug":"hello-world","postPagePath":"/articles/hello-world"},{"postType":"article","postSlug":"the-using-in-cpp","postPagePath":"/articles/the-using-in-cpp"}]},{"tag":"Blog","slug":"blog","path":"/tags/blog","postSlugs":[{"postType":"article","postSlug":"Building-this-blog","postPagePath":"/articles/Building-this-blog"},{"postType":"article","postSlug":"init-a-new-hexo-project","postPagePath":"/articles/init-a-new-hexo-project"},{"postType":"article","postSlug":"create-blog-cicd-by-github","postPagePath":"/articles/create-blog-cicd-by-github"},{"postType":"article","postSlug":"use-paste-image-and-vscode-memo","postPagePath":"/articles/use-paste-image-and-vscode-memo"},{"postType":"idea","postSlug":"blog-in-next","postPagePath":"/ideas/blog-in-next"},{"postType":"idea","postSlug":"blog-syntax","postPagePath":"/ideas/blog-syntax"}]},{"tag":"杂谈","slug":"杂谈","path":"/tags/杂谈","postSlugs":[{"postType":"article","postSlug":"hello-world","postPagePath":"/articles/hello-world"},{"postType":"article","postSlug":"try-cursor-and-thinking","postPagePath":"/articles/try-cursor-and-thinking"}]},{"tag":"C++","slug":"c++","path":"/tags/c++","postSlugs":[{"postType":"article","postSlug":"the-using-in-cpp","postPagePath":"/articles/the-using-in-cpp"}]},{"tag":"Python","slug":"python","path":"/tags/python","postSlugs":[{"postType":"article","postSlug":"python-dict","postPagePath":"/articles/python-dict"}]},{"tag":"数据结构","slug":"数据结构","path":"/tags/数据结构","postSlugs":[{"postType":"article","postSlug":"python-dict","postPagePath":"/articles/python-dict"},{"postType":"article","postSlug":"Sort-algorithm","postPagePath":"/articles/Sort-algorithm"},{"postType":"article","postSlug":"Handy-heap-cheat-sheet","postPagePath":"/articles/Handy-heap-cheat-sheet"}]},{"tag":"算法","slug":"算法","path":"/tags/算法","postSlugs":[{"postType":"article","postSlug":"Sort-algorithm","postPagePath":"/articles/Sort-algorithm"},{"postType":"article","postSlug":"Handy-heap-cheat-sheet","postPagePath":"/articles/Handy-heap-cheat-sheet"}]},{"tag":"排序","slug":"排序","path":"/tags/排序","postSlugs":[{"postType":"article","postSlug":"Sort-algorithm","postPagePath":"/articles/Sort-algorithm"}]},{"tag":"算法竞赛","slug":"算法竞赛","path":"/tags/算法竞赛","postSlugs":[{"postType":"article","postSlug":"Handy-heap-cheat-sheet","postPagePath":"/articles/Handy-heap-cheat-sheet"}]},{"tag":"设计模式","slug":"设计模式","path":"/tags/设计模式","postSlugs":[{"postType":"article","postSlug":"The-beauty-of-design-parten","postPagePath":"/articles/The-beauty-of-design-parten"}]},{"tag":"笔记","slug":"笔记","path":"/tags/笔记","postSlugs":[{"postType":"article","postSlug":"The-beauty-of-design-parten","postPagePath":"/articles/The-beauty-of-design-parten"}]},{"tag":"GitHub","slug":"github","path":"/tags/github","postSlugs":[{"postType":"article","postSlug":"create-blog-cicd-by-github","postPagePath":"/articles/create-blog-cicd-by-github"}]},{"tag":"AWS","slug":"aws","path":"/tags/aws","postSlugs":[{"postType":"article","postSlug":"create-blog-cicd-by-github","postPagePath":"/articles/create-blog-cicd-by-github"}]},{"tag":"CI/CD","slug":"ci-cd","path":"/tags/ci-cd","postSlugs":[{"postType":"article","postSlug":"create-blog-cicd-by-github","postPagePath":"/articles/create-blog-cicd-by-github"}]},{"tag":"IaC","slug":"iac","path":"/tags/iac","postSlugs":[{"postType":"article","postSlug":"create-blog-cicd-by-github","postPagePath":"/articles/create-blog-cicd-by-github"}]},{"tag":"DevOps","slug":"devops","path":"/tags/devops","postSlugs":[{"postType":"article","postSlug":"create-blog-cicd-by-github","postPagePath":"/articles/create-blog-cicd-by-github"},{"postType":"article","postSlug":"introduction-for-k8s","postPagePath":"/articles/introduction-for-k8s"},{"postType":"article","postSlug":"introduction-for-k8s-2","postPagePath":"/articles/introduction-for-k8s-2"},{"postType":"idea","postSlug":"newest","postPagePath":"/ideas/newest"}]},{"tag":"VSCode","slug":"vscode","path":"/tags/vscode","postSlugs":[{"postType":"article","postSlug":"use-paste-image-and-vscode-memo","postPagePath":"/articles/use-paste-image-and-vscode-memo"}]},{"tag":"Hexo","slug":"hexo","path":"/tags/hexo","postSlugs":[{"postType":"article","postSlug":"use-paste-image-and-vscode-memo","postPagePath":"/articles/use-paste-image-and-vscode-memo"}]},{"tag":"JavaScript","slug":"javascript","path":"/tags/javascript","postSlugs":[{"postType":"article","postSlug":"use-paste-image-and-vscode-memo","postPagePath":"/articles/use-paste-image-and-vscode-memo"}]},{"tag":"Kubernetes","slug":"kubernetes","path":"/tags/kubernetes","postSlugs":[{"postType":"article","postSlug":"introduction-for-k8s","postPagePath":"/articles/introduction-for-k8s"},{"postType":"article","postSlug":"introduction-for-k8s-2","postPagePath":"/articles/introduction-for-k8s-2"},{"postType":"idea","postSlug":"newest","postPagePath":"/ideas/newest"}]},{"tag":"Docker","slug":"docker","path":"/tags/docker","postSlugs":[{"postType":"article","postSlug":"introduction-for-k8s","postPagePath":"/articles/introduction-for-k8s"},{"postType":"article","postSlug":"introduction-for-k8s-2","postPagePath":"/articles/introduction-for-k8s-2"},{"postType":"idea","postSlug":"newest","postPagePath":"/ideas/newest"}]},{"tag":"Cloud Native","slug":"cloud-native","path":"/tags/cloud-native","postSlugs":[{"postType":"article","postSlug":"introduction-for-k8s","postPagePath":"/articles/introduction-for-k8s"},{"postType":"article","postSlug":"introduction-for-k8s-2","postPagePath":"/articles/introduction-for-k8s-2"},{"postType":"idea","postSlug":"newest","postPagePath":"/ideas/newest"}]},{"tag":"Cursor","slug":"cursor","path":"/tags/cursor","postSlugs":[{"postType":"article","postSlug":"try-cursor-and-thinking","postPagePath":"/articles/try-cursor-and-thinking"}]},{"tag":"Nextjs","slug":"nextjs","path":"/tags/nextjs","postSlugs":[{"postType":"idea","postSlug":"blog-in-next","postPagePath":"/ideas/blog-in-next"},{"postType":"idea","postSlug":"blog-syntax","postPagePath":"/ideas/blog-syntax"}]},{"tag":"Linux","slug":"linux","path":"/tags/linux","postSlugs":[{"postType":"idea","postSlug":"Linux Systemd","postPagePath":"/ideas/Linux Systemd"},{"postType":"idea","postSlug":"Linux 信号处理 —— Signal","postPagePath":"/ideas/Linux 信号处理 —— Signal"},{"postType":"idea","postSlug":"Linux 内存 —— 内存分页、分段","postPagePath":"/ideas/Linux 内存 —— 内存分页、分段"},{"postType":"idea","postSlug":"Linux 内存 —— 堆和栈","postPagePath":"/ideas/Linux 内存 —— 堆和栈"},{"postType":"idea","postSlug":"Linux 内存 —— 虚拟内存","postPagePath":"/ideas/Linux 内存 —— 虚拟内存"},{"postType":"idea","postSlug":"Linux 调度 —— 进程与线程","postPagePath":"/ideas/Linux 调度 —— 进程与线程"}]},{"tag":"systemctl","slug":"systemctl","path":"/tags/systemctl","postSlugs":[{"postType":"idea","postSlug":"Linux Systemd","postPagePath":"/ideas/Linux Systemd"}]},{"tag":"journalctl","slug":"journalctl","path":"/tags/journalctl","postSlugs":[{"postType":"idea","postSlug":"Linux Systemd","postPagePath":"/ideas/Linux Systemd"}]},{"tag":"timedatectl","slug":"timedatectl","path":"/tags/timedatectl","postSlugs":[{"postType":"idea","postSlug":"Linux Systemd","postPagePath":"/ideas/Linux Systemd"}]},{"tag":"BasicKnowledge","slug":"basicknowledge","path":"/tags/basicknowledge","postSlugs":[{"postType":"idea","postSlug":"Linux Systemd","postPagePath":"/ideas/Linux Systemd"},{"postType":"idea","postSlug":"Linux 信号处理 —— Signal","postPagePath":"/ideas/Linux 信号处理 —— Signal"},{"postType":"idea","postSlug":"Linux 内存 —— 内存分页、分段","postPagePath":"/ideas/Linux 内存 —— 内存分页、分段"},{"postType":"idea","postSlug":"Linux 内存 —— 堆和栈","postPagePath":"/ideas/Linux 内存 —— 堆和栈"},{"postType":"idea","postSlug":"Linux 内存 —— 虚拟内存","postPagePath":"/ideas/Linux 内存 —— 虚拟内存"},{"postType":"idea","postSlug":"Linux 调度 —— 进程与线程","postPagePath":"/ideas/Linux 调度 —— 进程与线程"}]},{"tag":"Operation","slug":"operation","path":"/tags/operation","postSlugs":[{"postType":"idea","postSlug":"Linux Systemd","postPagePath":"/ideas/Linux Systemd"},{"postType":"idea","postSlug":"Linux 信号处理 —— Signal","postPagePath":"/ideas/Linux 信号处理 —— Signal"},{"postType":"idea","postSlug":"Linux 内存 —— 内存分页、分段","postPagePath":"/ideas/Linux 内存 —— 内存分页、分段"},{"postType":"idea","postSlug":"Linux 内存 —— 虚拟内存","postPagePath":"/ideas/Linux 内存 —— 虚拟内存"}]},{"tag":"Signal","slug":"signal","path":"/tags/signal","postSlugs":[{"postType":"idea","postSlug":"Linux 信号处理 —— Signal","postPagePath":"/ideas/Linux 信号处理 —— Signal"}]},{"tag":"memory","slug":"memory","path":"/tags/memory","postSlugs":[{"postType":"idea","postSlug":"Linux 内存 —— 内存分页、分段","postPagePath":"/ideas/Linux 内存 —— 内存分页、分段"},{"postType":"idea","postSlug":"Linux 内存 —— 堆和栈","postPagePath":"/ideas/Linux 内存 —— 堆和栈"},{"postType":"idea","postSlug":"Linux 内存 —— 虚拟内存","postPagePath":"/ideas/Linux 内存 —— 虚拟内存"}]},{"tag":"schedule","slug":"schedule","path":"/tags/schedule","postSlugs":[{"postType":"idea","postSlug":"Linux 调度 —— 进程与线程","postPagePath":"/ideas/Linux 调度 —— 进程与线程"}]},{"tag":"Cloud Computing","slug":"cloud-computing","path":"/tags/cloud-computing","postSlugs":[{"postType":"idea","postSlug":"newest","postPagePath":"/ideas/newest"}]}],"selectedTagInfo":{"tag":"杂谈","slug":"杂谈","path":"/tags/杂谈","postSlugs":[{"postType":"article","postSlug":"hello-world","postPagePath":"/articles/hello-world"},{"postType":"article","postSlug":"try-cursor-and-thinking","postPagePath":"/articles/try-cursor-and-thinking"}]},"posts":[{"pathMapping":{"filePath":"public/content/articles/2024-11-16-try-cursor-and-thinking.md","pagePath":"/articles/try-cursor-and-thinking","slug":"try-cursor-and-thinking"},"meta":{"content":"\n试着用了一下 cursor ，感觉还不错。非技术也能半小时能做一款 App 可能是真的。但替代不了技术岗也是真的。\n\n## 先说问题\n\n虽然 Cursor 基于 VSCode 二次开发，但可能为了做 AI 功能把 Editor Pooling 或者 File Watching 能力搞坏了，经常 Apply 了修改后 Explorer 和 Editor 里没有及时反馈。然后自动补全功能因为可以删内容导致手感跟 VSCode 里的 Copilot 比较不同，用起来比较 annoying 。\n\n### 文件系统监控问题\n\n作为一个基于 VSCode 二次开发的编辑器，Cursor 在文件系统监控方面存在一些问题。当对文件进行修改后，Explorer 和 Editor 经常无法及时反映这些变化，这可能是因为为了实现 AI 功能而对原有的 Editor Pooling 或 File Watching 机制进行了修改导致的。\n\n> 这简直太让人抓狂了！😫 你改了代码，编辑器却在那装傻充愣。就好像你发了消息，对方已读不回 💬。程序员最讨厌等待了，对吧？⏳\n\n### 自动补全体验差异\n\nCursor 的自动补全功能与 VSCode 中的 GitHub Copilot 有明显的使用体验差异。由于 Cursor 的补全可以删除已有内容，这种行为方式与程序员习惯的编辑模式不太相符，使用起来感觉比较突兀和烦人。\n\n> 这个功能真的让人又爱又恨 💔！AI 小助手太热情了，动不动就想帮你重写代码。冷静点，老铁！我只是想要一点提示而已！🤪\n\n### 性能影响\n\n这些技术问题不仅影响了开发体验，还可能会降低编码效率。实时的文件系统反馈对于开发工作流程来说是非常重要的，而自动补全功能的差异也会影响到日常编码的流畅度。\n\n> 性能问题真是让人头大 🤯！写代码就应该是行云流水的感觉，现在却经常要等等等...等到我都能喝完一杯咖啡了 ☕️！\n\n\n## Chat Anywhere\n\n不过 Chat Anywhere 这个做法应该是做对了。需要用 AI 代写的场景，很多时候并不是不会写而是懒得写，以前在 VSCode 里需要切到 Coplilot 的 Tab ，写 prompt 等回复，然后再将答案复制粘贴回去，多数情况下有这闲工夫还不如直接自己写🤣，在 Cursor 里可以直接原地调 AI 改写，真的巨舒服。\n\n> 这功能简直就是懒人福音啊！🎯 再也不用在各种窗口之间跳来跳去了！爽歪歪！🎊\n\n## 智能代码分析\n\n还有 Cursor 可以直接将整个项目 Indexing 掉，还能理解代码间的调用关系，一个 prompt 直接出调用关系图，再也不用挠爆头想怎么做 RAG 怎么给文章分块了，爽到。\n\n![[Pasted image 20241116200220.png]]\n\n![[Pasted image 20241116200148.png]]\n\n\n## 总结\n\n> 总的来说，Cursor 作为一款基于 AI 的代码编辑器有其独特的优势，尤其是 Chat Anywhere 和智能代码分析这样的创新功能确实提升了开发效率。但同时也存在一些技术问题，比如文件系统监控和自动补全体验等需要改进的地方。尽管如此，它展示了 AI 辅助编程的潜力，为未来编程工具的发展提供了新的思路。\n\n顺便一提，在引用块里的内容都是由 AI 生成的。\n","title":"尝试 Cursor 的感想和一些思考","abstract":"试着用了一下 cursor ，感觉还不错。非技术也能半小时能做一款 App 可能是真的。但替代不了技术岗也是真的。\n虽然 Cursor 基于 VSCode 二次开发，但可能为了做 AI 功能把 Editor Pooling 或者 File Watching 能力搞坏了，经常 Apply 了修改后 Explorer 和 Editor 里没有及时反馈。然后自动补全功能因为可以删内容导致手感跟 VSCode 里的 Copilot 比较不同，用起来比较 annoying 。\n作为一个基于 VSCode 二次开发的编辑器，Cursor 在文件系统监控方面存在一些问题。当对文件进行修改后，Explorer 和 Editor 经常无法及时反映这些变化，这可能是因为为了实现 AI 功能而对原有的 Editor Pooling 或 File Watching 机制进行了修改导致的。","length":47,"created_at":"2024-11-16T15:42:00.000Z","updated_at":"2024-11-16T15:42:00.000Z","tags":["Cursor","杂谈"],"license":true}},{"pathMapping":{"filePath":"public/content/articles/2020-01-27-hello-world.md","pagePath":"/articles/hello-world","slug":"hello-world"},"meta":{"content":"\n> “Hello World!”\n\n## 这是我的第一篇博文\n\n自己盲人摸象折腾了一两天，终于利用GitHub Pages，把自己的博客搭好了。\n\n感谢[Huxpro][Huxpro]提供的博客模板，以及[BruceZhao][BruceZhao]编写的中文ReadMe。\n\n这个博客的使用流程：\n- 写作时利用**Markdown**语法书写，与日常编写GitHub上的文档相同。\n- 使用**Git Workflow**进行博客的更新。\n- 利用**GitHub Pages**提供的域名与免费空间，以及其支持的**Jekyll**进行网站搭建。\n\n我以后会利用这个博客，记录些许编程中遇到的问题。同时还有记录一下生活娱乐上的琐事。\n\n这第一篇博文主要用于测试一下博客是否运行成功，不打算写太多东西。今后有时间的话会记录一下搭建博客的过程。\n\n\n#### 感谢\n\n- [Huxpro][Huxpro]提供的博客模板：[huxblog-boilerplate](https://github.com/Huxpro/huxblog-boilerplate)\n- [BruceZhao][BruceZhao]提供的中文翻译：[README.zh.md](https://github.com/Huxpro/huxpro.github.io/blob/master/README.zh.md)\n\n\n\n\n[Huxpro]: https://github.com/huxpro\n[BruceZhao]: https://github.com/BruceZhaoR","title":"Welcome to Ryo's Blog!","abstract":"> “Hello World!”\n自己盲人摸象折腾了一两天，终于利用GitHub Pages，把自己的博客搭好了。\n感谢[Huxpro][Huxpro]提供的博客模板，以及[BruceZhao][BruceZhao]编写的中文ReadMe。","length":29,"created_at":"2020-01-27T12:00:00.000Z","updated_at":"2022-03-27T13:30:33.000Z","tags":["杂技","杂谈"],"license":false}}]},"__N_SSG":true}