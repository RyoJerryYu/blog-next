{"pageProps":{"slug":"using-chart-js","tags":[],"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    figure: \"figure\",\n    h1: \"h1\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    span: \"span\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  }, {Bar} = _components;\n  if (!Bar) _missingMdxReference(\"Bar\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"testing-for-using-chart-js\",\n      children: _jsx(_components.a, {\n        href: \"#testing-for-using-chart-js\",\n        children: \"testing for using chart js\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Use Chart.js in React.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Introduce:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Chart.js: \", _jsx(_components.a, {\n          href: \"https://github.com/chartjs/Chart.js\",\n          children: \"https://github.com/chartjs/Chart.js\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"react-chartjs-2: \", _jsx(_components.a, {\n          href: \"https://github.com/reactchartjs/react-chartjs-2\",\n          children: \"https://github.com/reactchartjs/react-chartjs-2\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"remark-mdx-chartjs: \", _jsx(_components.a, {\n          href: \"https://github.com/pangelani/remark-mdx-chartjs\",\n          children: \"https://github.com/pangelani/remark-mdx-chartjs\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h1, {\n      id: \"chartjs\",\n      children: _jsx(_components.a, {\n        href: \"#chartjs\",\n        children: \"Chart.js\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Documentation:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.chartjs.org/docs/latest/\",\n        children: \"https://www.chartjs.org/docs/latest/\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We should use the Tree-shaking feature for react-chartjs-2.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A very helpful guide about Chart.js:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.chartjs.org/docs/latest/getting-started/usage.html\",\n        children: \"https://www.chartjs.org/docs/latest/getting-started/usage.html\"\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      id: \"react-chartjs-2\",\n      children: _jsx(_components.a, {\n        href: \"#react-chartjs-2\",\n        children: \"react-chartjs-2\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Documentation:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://react-chartjs-2.js.org/\",\n        children: \"https://react-chartjs-2.js.org/\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"we could code like this:\"\n    }), \"\\n\", _jsx(_components.figure, {\n      \"data-rehype-pretty-code-figure\": \"\",\n      children: _jsx(_components.pre, {\n        style: {\n          backgroundColor: \"#232136\",\n          color: \"#e0def4\"\n        },\n        tabIndex: \"0\",\n        \"data-language\": \"jsx\",\n        \"data-theme\": \"rose-pine-moon\",\n        children: _jsxs(_components.code, {\n          \"data-language\": \"jsx\",\n          \"data-theme\": \"rose-pine-moon\",\n          style: {\n            display: \"grid\"\n          },\n          children: [_jsxs(_components.span, {\n            \"data-line\": \"\",\n            children: [_jsx(_components.span, {\n              style: {\n                color: \"#6E6A86\"\n              },\n              children: \"<\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#9CCFD8\"\n              },\n              children: \"Bar\"\n            })]\n          }), \"\\n\", _jsxs(_components.span, {\n            \"data-line\": \"\",\n            children: [_jsx(_components.span, {\n              style: {\n                color: \"#C4A7E7\",\n                fontStyle: \"italic\"\n              },\n              children: \"  data\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#3E8FB0\"\n              },\n              children: \"=\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#908CAA\"\n              },\n              children: \"{{\"\n            })]\n          }), \"\\n\", _jsxs(_components.span, {\n            \"data-line\": \"\",\n            children: [_jsx(_components.span, {\n              style: {\n                color: \"#E0DEF4\"\n              },\n              children: \"    labels\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#908CAA\"\n              },\n              children: \":\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#E0DEF4\"\n              },\n              children: \" [\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#F6C177\"\n              },\n              children: \"\\\"January\\\"\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#908CAA\"\n              },\n              children: \",\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#F6C177\"\n              },\n              children: \" \\\"February\\\"\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#908CAA\"\n              },\n              children: \",\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#F6C177\"\n              },\n              children: \" \\\"March\\\"\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#E0DEF4\"\n              },\n              children: \"]\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#908CAA\"\n              },\n              children: \",\"\n            })]\n          }), \"\\n\", _jsxs(_components.span, {\n            \"data-line\": \"\",\n            children: [_jsx(_components.span, {\n              style: {\n                color: \"#E0DEF4\"\n              },\n              children: \"    datasets\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#908CAA\"\n              },\n              children: \":\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#E0DEF4\"\n              },\n              children: \" [\"\n            })]\n          }), \"\\n\", _jsx(_components.span, {\n            \"data-line\": \"\",\n            children: _jsx(_components.span, {\n              style: {\n                color: \"#908CAA\"\n              },\n              children: \"      {\"\n            })\n          }), \"\\n\", _jsxs(_components.span, {\n            \"data-line\": \"\",\n            children: [_jsx(_components.span, {\n              style: {\n                color: \"#E0DEF4\"\n              },\n              children: \"        label\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#908CAA\"\n              },\n              children: \":\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#F6C177\"\n              },\n              children: \" \\\"Dataset 1\\\"\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#908CAA\"\n              },\n              children: \",\"\n            })]\n          }), \"\\n\", _jsxs(_components.span, {\n            \"data-line\": \"\",\n            children: [_jsx(_components.span, {\n              style: {\n                color: \"#E0DEF4\"\n              },\n              children: \"        data\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#908CAA\"\n              },\n              children: \":\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#E0DEF4\"\n              },\n              children: \" [\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#EA9A97\"\n              },\n              children: \"10\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#908CAA\"\n              },\n              children: \",\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#EA9A97\"\n              },\n              children: \" 20\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#908CAA\"\n              },\n              children: \",\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#EA9A97\"\n              },\n              children: \" 30\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#E0DEF4\"\n              },\n              children: \"]\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#908CAA\"\n              },\n              children: \",\"\n            })]\n          }), \"\\n\", _jsxs(_components.span, {\n            \"data-line\": \"\",\n            children: [_jsx(_components.span, {\n              style: {\n                color: \"#E0DEF4\"\n              },\n              children: \"        backgroundColor\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#908CAA\"\n              },\n              children: \":\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#F6C177\"\n              },\n              children: \" \\\"rgba(255, 99, 132, 0.5)\\\"\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#908CAA\"\n              },\n              children: \",\"\n            })]\n          }), \"\\n\", _jsx(_components.span, {\n            \"data-line\": \"\",\n            children: _jsx(_components.span, {\n              style: {\n                color: \"#908CAA\"\n              },\n              children: \"      },\"\n            })\n          }), \"\\n\", _jsx(_components.span, {\n            \"data-line\": \"\",\n            children: _jsx(_components.span, {\n              style: {\n                color: \"#908CAA\"\n              },\n              children: \"      {\"\n            })\n          }), \"\\n\", _jsxs(_components.span, {\n            \"data-line\": \"\",\n            children: [_jsx(_components.span, {\n              style: {\n                color: \"#E0DEF4\"\n              },\n              children: \"        label\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#908CAA\"\n              },\n              children: \":\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#F6C177\"\n              },\n              children: \" \\\"Dataset 2\\\"\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#908CAA\"\n              },\n              children: \",\"\n            })]\n          }), \"\\n\", _jsxs(_components.span, {\n            \"data-line\": \"\",\n            children: [_jsx(_components.span, {\n              style: {\n                color: \"#E0DEF4\"\n              },\n              children: \"        data\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#908CAA\"\n              },\n              children: \":\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#E0DEF4\"\n              },\n              children: \" [\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#EA9A97\"\n              },\n              children: \"20\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#908CAA\"\n              },\n              children: \",\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#EA9A97\"\n              },\n              children: \" 30\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#908CAA\"\n              },\n              children: \",\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#EA9A97\"\n              },\n              children: \" 40\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#E0DEF4\"\n              },\n              children: \"]\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#908CAA\"\n              },\n              children: \",\"\n            })]\n          }), \"\\n\", _jsxs(_components.span, {\n            \"data-line\": \"\",\n            children: [_jsx(_components.span, {\n              style: {\n                color: \"#E0DEF4\"\n              },\n              children: \"        backgroundColor\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#908CAA\"\n              },\n              children: \":\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#F6C177\"\n              },\n              children: \" \\\"rgba(53, 162, 235, 0.5)\\\"\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#908CAA\"\n              },\n              children: \",\"\n            })]\n          }), \"\\n\", _jsx(_components.span, {\n            \"data-line\": \"\",\n            children: _jsx(_components.span, {\n              style: {\n                color: \"#908CAA\"\n              },\n              children: \"      },\"\n            })\n          }), \"\\n\", _jsxs(_components.span, {\n            \"data-line\": \"\",\n            children: [_jsx(_components.span, {\n              style: {\n                color: \"#E0DEF4\"\n              },\n              children: \"    ]\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#908CAA\"\n              },\n              children: \",\"\n            })]\n          }), \"\\n\", _jsx(_components.span, {\n            \"data-line\": \"\",\n            children: _jsx(_components.span, {\n              style: {\n                color: \"#908CAA\"\n              },\n              children: \"  }}\"\n            })\n          }), \"\\n\", _jsx(_components.span, {\n            \"data-line\": \"\",\n            children: _jsx(_components.span, {\n              style: {\n                color: \"#6E6A86\"\n              },\n              children: \"/>\"\n            })\n          })]\n        })\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"and result:\"\n    }), \"\\n\", _jsx(Bar, {\n      data: {\n        labels: [\"January\", \"February\", \"March\"],\n        datasets: [{\n          label: \"Dataset 1\",\n          data: [10, 20, 30],\n          backgroundColor: \"rgba(255, 99, 132, 0.5)\"\n        }, {\n          label: \"Dataset 2\",\n          data: [20, 30, 40],\n          backgroundColor: \"rgba(53, 162, 235, 0.5)\"\n        }]\n      }\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"And it is tree-shakable.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://react-chartjs-2.js.org/docs/migration-to-v4/#tree-shaking\",\n        children: \"https://react-chartjs-2.js.org/docs/migration-to-v4/#tree-shaking\"\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      id: \"remark-mdx-chartjs\",\n      children: _jsx(_components.a, {\n        href: \"#remark-mdx-chartjs\",\n        children: \"remark-mdx-chartjs\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://github.com/pangelani/remark-mdx-chartjs\",\n        children: \"https://github.com/pangelani/remark-mdx-chartjs\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"With this, could write chart in markdown.\"\n    }), \"\\n\", _jsx(_components.figure, {\n      \"data-rehype-pretty-code-figure\": \"\",\n      children: _jsx(_components.pre, {\n        style: {\n          backgroundColor: \"#232136\",\n          color: \"#e0def4\"\n        },\n        tabIndex: \"0\",\n        \"data-language\": \"md\",\n        \"data-theme\": \"rose-pine-moon\",\n        children: _jsxs(_components.code, {\n          \"data-language\": \"md\",\n          \"data-theme\": \"rose-pine-moon\",\n          style: {\n            display: \"grid\"\n          },\n          children: [_jsxs(_components.span, {\n            \"data-line\": \"\",\n            children: [_jsx(_components.span, {\n              style: {\n                color: \"#908CAA\"\n              },\n              children: \"```\"\n            }), _jsx(_components.span, {\n              style: {\n                color: \"#E0DEF4\"\n              },\n              children: \"chartjs\"\n            })]\n          }), \"\\n\", _jsx(_components.span, {\n            \"data-line\": \"\",\n            children: _jsx(_components.span, {\n              style: {\n                color: \"#E0DEF4\"\n              },\n              children: \"type: bar\"\n            })\n          }), \"\\n\", _jsx(_components.span, {\n            \"data-line\": \"\",\n            children: _jsx(_components.span, {\n              style: {\n                color: \"#E0DEF4\"\n              },\n              children: \"data:\"\n            })\n          }), \"\\n\", _jsx(_components.span, {\n            \"data-line\": \"\",\n            children: _jsx(_components.span, {\n              style: {\n                color: \"#E0DEF4\"\n              },\n              children: \"labels: [\\\"January\\\", \\\"February\\\", \\\"March\\\", \\\"April\\\", \\\"May\\\", \\\"June\\\", \\\"July\\\"]\"\n            })\n          }), \"\\n\", _jsx(_components.span, {\n            \"data-line\": \"\",\n            children: _jsx(_components.span, {\n              style: {\n                color: \"#E0DEF4\"\n              },\n              children: \"datasets:\"\n            })\n          }), \"\\n\", _jsx(_components.span, {\n            \"data-line\": \"\",\n            children: _jsx(_components.span, {\n              style: {\n                color: \"#E0DEF4\"\n              },\n              children: \"    - label: \\\"Dataset 1\\\"\"\n            })\n          }), \"\\n\", _jsx(_components.span, {\n            \"data-line\": \"\",\n            children: _jsx(_components.span, {\n              style: {\n                color: \"#E0DEF4\"\n              },\n              children: \"    data: [0,2,6,1,7,13,2]\"\n            })\n          }), \"\\n\", _jsx(_components.span, {\n            \"data-line\": \"\",\n            children: _jsx(_components.span, {\n              style: {\n                color: \"#E0DEF4\"\n              },\n              children: \"    backgroundColor: \\\"rgba(255, 99, 132, 0.5)\\\"\"\n            })\n          }), \"\\n\", _jsx(_components.span, {\n            \"data-line\": \"\",\n            children: \" \"\n          }), \"\\n\", _jsx(_components.span, {\n            \"data-line\": \"\",\n            children: _jsx(_components.span, {\n              style: {\n                color: \"#E0DEF4\"\n              },\n              children: \"    - label: \\\"Dataset 2\\\"\"\n            })\n          }), \"\\n\", _jsx(_components.span, {\n            \"data-line\": \"\",\n            children: _jsx(_components.span, {\n              style: {\n                color: \"#E0DEF4\"\n              },\n              children: \"    data: [4,2,11,8,6,1,4]\"\n            })\n          }), \"\\n\", _jsx(_components.span, {\n            \"data-line\": \"\",\n            children: _jsx(_components.span, {\n              style: {\n                color: \"#E0DEF4\"\n              },\n              children: \"    backgroundColor: \\\"rgba(53, 162, 235, 0.5)\\\"\"\n            })\n          }), \"\\n\", _jsx(_components.span, {\n            \"data-line\": \"\",\n            children: _jsx(_components.span, {\n              style: {\n                color: \"#908CAA\"\n              },\n              children: \"```\"\n            })\n          })]\n        })\n      })\n    }), \"\\n\", _jsx(_components.figure, {\n      \"data-rehype-pretty-code-figure\": \"\",\n      children: _jsx(_components.pre, {\n        style: {\n          backgroundColor: \"#232136\",\n          color: \"#e0def4\"\n        },\n        tabIndex: \"0\",\n        \"data-language\": \"chartjs\",\n        \"data-theme\": \"rose-pine-moon\",\n        children: _jsxs(_components.code, {\n          \"data-language\": \"chartjs\",\n          \"data-theme\": \"rose-pine-moon\",\n          style: {\n            display: \"grid\"\n          },\n          children: [_jsx(_components.span, {\n            \"data-line\": \"\",\n            children: _jsx(_components.span, {\n              children: \"type: bar\"\n            })\n          }), \"\\n\", _jsx(_components.span, {\n            \"data-line\": \"\",\n            children: _jsx(_components.span, {\n              children: \"data:\"\n            })\n          }), \"\\n\", _jsx(_components.span, {\n            \"data-line\": \"\",\n            children: _jsx(_components.span, {\n              children: \"labels: [\\\"January\\\", \\\"February\\\", \\\"March\\\", \\\"April\\\", \\\"May\\\", \\\"June\\\", \\\"July\\\"]\"\n            })\n          }), \"\\n\", _jsx(_components.span, {\n            \"data-line\": \"\",\n            children: _jsx(_components.span, {\n              children: \"datasets:\"\n            })\n          }), \"\\n\", _jsx(_components.span, {\n            \"data-line\": \"\",\n            children: _jsx(_components.span, {\n              children: \"    - label: \\\"Dataset 1\\\"\"\n            })\n          }), \"\\n\", _jsx(_components.span, {\n            \"data-line\": \"\",\n            children: _jsx(_components.span, {\n              children: \"    data: [0,2,6,1,7,13,2]\"\n            })\n          }), \"\\n\", _jsx(_components.span, {\n            \"data-line\": \"\",\n            children: _jsx(_components.span, {\n              children: \"    backgroundColor: \\\"rgba(255, 99, 132, 0.5)\\\"\"\n            })\n          }), \"\\n\", _jsx(_components.span, {\n            \"data-line\": \"\",\n            children: \" \"\n          }), \"\\n\", _jsx(_components.span, {\n            \"data-line\": \"\",\n            children: _jsx(_components.span, {\n              children: \"    - label: \\\"Dataset 2\\\"\"\n            })\n          }), \"\\n\", _jsx(_components.span, {\n            \"data-line\": \"\",\n            children: _jsx(_components.span, {\n              children: \"    data: [4,2,11,8,6,1,4]\"\n            })\n          }), \"\\n\", _jsx(_components.span, {\n            \"data-line\": \"\",\n            children: _jsx(_components.span, {\n              children: \"    backgroundColor: \\\"rgba(53, 162, 235, 0.5)\\\"\"\n            })\n          })]\n        })\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"But it's not written in TypeScript, and raising a TS7016 error.\\nSo raise an issue, and wait for the type definition.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}},"meta":{"content":"\n# testing for using chart js\n\nUse Chart.js in React.\n\nIntroduce:\n\n- Chart.js: https://github.com/chartjs/Chart.js\n- react-chartjs-2: https://github.com/reactchartjs/react-chartjs-2\n- remark-mdx-chartjs: https://github.com/pangelani/remark-mdx-chartjs\n\n# Chart.js\n\nDocumentation:\n\nhttps://www.chartjs.org/docs/latest/\n\nWe should use the Tree-shaking feature for react-chartjs-2.\n\nA very helpful guide about Chart.js:\n\nhttps://www.chartjs.org/docs/latest/getting-started/usage.html\n\n# react-chartjs-2\n\nDocumentation:\n\nhttps://react-chartjs-2.js.org/\n\nwe could code like this:\n\n```jsx\n<Bar\n  data={{\n    labels: [\"January\", \"February\", \"March\"],\n    datasets: [\n      {\n        label: \"Dataset 1\",\n        data: [10, 20, 30],\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n      },\n      {\n        label: \"Dataset 2\",\n        data: [20, 30, 40],\n        backgroundColor: \"rgba(53, 162, 235, 0.5)\",\n      },\n    ],\n  }}\n/>\n```\n\nand result:\n\n<Bar\n  data={{\n    labels: [\"January\", \"February\", \"March\"],\n    datasets: [\n      {\n        label: \"Dataset 1\",\n        data: [10, 20, 30],\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n      },\n      {\n        label: \"Dataset 2\",\n        data: [20, 30, 40],\n        backgroundColor: \"rgba(53, 162, 235, 0.5)\",\n      },\n    ],\n  }}\n/>\n\nAnd it is tree-shakable.\n\nhttps://react-chartjs-2.js.org/docs/migration-to-v4/#tree-shaking\n\n# remark-mdx-chartjs\n\nhttps://github.com/pangelani/remark-mdx-chartjs\n\nWith this, could write chart in markdown.\n\n````md\n```chartjs\ntype: bar\ndata:\nlabels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"]\ndatasets:\n    - label: \"Dataset 1\"\n    data: [0,2,6,1,7,13,2]\n    backgroundColor: \"rgba(255, 99, 132, 0.5)\"\n\n    - label: \"Dataset 2\"\n    data: [4,2,11,8,6,1,4]\n    backgroundColor: \"rgba(53, 162, 235, 0.5)\"\n```\n````\n\n```chartjs\ntype: bar\ndata:\nlabels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"]\ndatasets:\n    - label: \"Dataset 1\"\n    data: [0,2,6,1,7,13,2]\n    backgroundColor: \"rgba(255, 99, 132, 0.5)\"\n\n    - label: \"Dataset 2\"\n    data: [4,2,11,8,6,1,4]\n    backgroundColor: \"rgba(53, 162, 235, 0.5)\"\n```\n\nBut it's not written in TypeScript, and raising a TS7016 error.\nSo raise an issue, and wait for the type definition.\n","title":"About Chart.js","abstract":"Use Chart.js in React.\nIntroduce:\n- Chart.js: https://github.com/chartjs/Chart.js","length":114,"created_at":"2023-02-12T16:36:52.000Z","updated_at":"2023-02-12T16:56:33.000Z","tags":[],"license":false},"prevNextInfo":{"prevInfo":{"pathMapping":{"filePath":"public/content/ideas/Linux Cone VS Fork.md","pagePath":"/ideas/Linux Cone VS Fork","slug":"Linux Cone VS Fork"},"meta":{"content":"","title":"Linux Cone VS Fork","abstract":"","length":1,"created_at":"2024-11-16T07:32:08.000Z","updated_at":null,"tags":[],"license":false}},"nextInfo":{"pathMapping":{"filePath":"public/content/ideas/Linux 信号处理 —— Signal.md","pagePath":"/ideas/Linux 信号处理 —— Signal","slug":"Linux 信号处理 —— Signal"},"meta":{"content":"\n#Linux #Signal #BasicKnowledge #Operation \n\n信号是一种中断，为 Linux 提供一种处理异步事件的方法。\n\n [Linux 信号（signal） - 简书](https://www.jianshu.com/p/f445bfeea40a) \n\n\n### 信号的定义\n- 9: `SIGKILL`\n- 2: `SIGINT`\n- 15: `SIGTERM`\n\n### 信号的使用\n- `signal.h` 中，调用 `signal` 函数传入一个 `sighandler_t` 类型的 `handler` ，注册信号处理函数 \n- 用 `kill` 函数对一个 pid 发送一个信号。已注册信号， `kill` 发送的信号都能收到\n- `exec` 函数会将原先要捕捉的信号设置为默认动作\n- `fork` 函数的子进程会继承父进程的信号处理方式 [[Linux Clone VS Fork]]\n\n原型：\n```cpp\n#include <signal.h>\ntypedef void (*sighandler_t)(int);\nsighandler_t signal(int signum, sighandler_t handler);\n```\n\n```cpp\n#include <sys/types.h>\n#include <signal.h>\nint kill(pid_t pid, int sig);\n```\n\n### 未了解\n- [ ] 高级信号发送接收： sigaction , sigqueue\n\n\n# 一文看懂 Linux 信号处理原理与实现\n\n [一文看懂 Linux 信号处理原理与实现-linux 信号处理流程](https://www.51cto.com/article/675743.html) \n\n### 信号处理时内核态\n\n信号处理程序代码运行在用户态\nA 进程向 B 进程发送信号，发起系统调用陷入内核态，内核触发信号处理函数，返回用户态执行信号处理程序，信号处理程序执行完毕后返回到内核态执行收尾工作，再返回用户态继续执行程序\n\n![[Pasted image 20240819014740.png]]\n### 未了解\n- [ ] sigaction 详细解释\n- [ ] signal 在内核态的处理过程\n- [ ]","title":"Linux 信号处理 —— Signal","abstract":"信号是一种中断，为 Linux 提供一种处理异步事件的方法。\n [Linux 信号（signal） - 简书](https://www.jianshu.com/p/f445bfeea40a) \n- 9: `SIGKILL`","length":50,"created_at":"2024-11-16T07:32:08.000Z","updated_at":null,"tags":["Linux","Signal","BasicKnowledge","Operation"],"license":false}}}},"__N_SSG":true}